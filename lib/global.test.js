'use strict';

var methodConteiner = {};
methodConteiner.method = function(obj) {
  obj.field = 'value';
  return obj;
};

impress.test({
  'Function.prototype.override': [
    [
      methodConteiner.method,
      function(obj) {
        obj.data++;
        return this.inherited(obj);
      },
      function(fn) {
        methodConteiner.method = fn;
        return methodConteiner.method({ data:123 }).data === 124;
      }
    ]
  ],
  'isBrowser': [ [ [], false ] ],
  'isServer':  [ [ [], true  ] ],
  'falseness': [ [ [], false ] ],
  'isInitialized': true,
  'extend': [
    [ { f1:1 },                 { f1:1 } ],
    [ { f1:1 }, {},             { f1:1 } ],
    [ {}, {},                         {} ],
    [ {}, null,                       {} ],
    [ { f1:1 }, { f2:2 }, { f1:1, f2:2 } ],
    [ null, null,                   null ],
    [ null,                         null ],
    [ 'Hello' ,                  'Hello' ],
    [ 'Hello', { f2:2 },         'Hello' ],
    [ 2, 3,                            2 ],
    [ null, {},                     null ],
    [ [], { f2:2 },                   [] ],
    [ [], [],                         [] ],
    [ [], null,                       [] ],
    [ [], 'Hello', ['H','e','l','l','o'] ],
  ],
  'clone': [
    [ {}, {} ],
    [ [], [] ],
    [ null, null ],
    [ { f1:1 }, { f1:1 } ],
    [ { f1:1 }, { f2:2 }, { f1:1, f2:2 } ],
    [ { f1:1, sub: { f2:2, a1:[1,2] } }, { f1:1, sub:{ f2:2, a1:[1,2] } } ],
    [ { f1:1, sub: { f2:2, a1:[1,2] } }, { f3:3, a2:[3,4] }, { f1:1, sub:{ f2:2, a1:[1,2] }, f3:3, a2:[3,4] } ],
  ],
  'Array.isArray': [
    [ [ 1, 2, 3 ],  true  ],
    [ [ 'a', 'b' ], true  ],
    [ 'abcdefgh',   false ],
    [ {},           false ],
    [ null,         false ],
  ],
  'arrayDelete': [
    [ [ 'e1', 'e2' ], 'e1', 1 ],
    [ [ 'e1', 'e2' ], 'e3', 0 ],
    [ [ ], 'e3',            0 ],
    [ null, 'e3',           0 ],
    [ [ null, 'e1' ], 'e1', 1 ],
    [ [ null, 'e1' ], null, 1 ],
  ],
  'Array.prototype.indexOf': [
    [ [1, 2, 3, 2, 1],  1,  0 ],
    [ [1, 2, 3, 2, 1],  2,  1 ],
    [ [1, 2, 3, 2, 1],  3,  2 ],
    [ [1, 2, 3, 2, 1],  0, -1 ],
    [ [1, 2, 3, 2, 1], -1, -1 ],
  ],
  'Array.prototype.lastIndexOf': [
    [ [1, 2, 3, 2, 1],  1,  4 ],
    [ [1, 2, 3, 2, 1],  2,  3 ],
    [ [1, 2, 3, 2, 1],  3,  2 ],
    [ [1, 2, 3, 2, 1],  0, -1 ],
    [ [1, 2, 3, 2, 1], -1, -1 ],
  ],
  'inArray': [
    [ [1, 2, 3], 1,             true  ],
    [ [1, 2, 3], 4,             false ],
    [ ['e1', 'e2', 'e3'], 'e3', true  ],
    [ ['e1', 'e2', 'e3'], 'e4', false ],
    [ [1, null, 3], null,        true ],
  ],
  'Array.prototype.merge': [
    [ ['a', 'b'], ['a', 'c'],       ['a', 'b', 'c'] ],
    [ ['a', 'b'], ['a', 'b'],            ['a', 'b'] ],
    [ ['b', 'c'], ['a', 'b'],       ['b', 'c', 'a'] ],
    [ ['a', 'b'], ['c', 'd'], ['a', 'b' , 'c', 'd'] ],
    [ [1, 2, 3],  [1, 2, 3],              [1, 2, 3] ],
    [ [1, 2, 3],  [4, 5, 1],        [1, 2, 3, 4, 5] ],
  ],
  'String.prototype.trim': [
    [ 'abcdef',             'abcdef' ],
    [ 'abcdef   ',          'abcdef' ],
    [ '   abcdef',          'abcdef' ],
    [ '   abcdef   ',       'abcdef' ],
    [ ' a b c d e f ', 'a b c d e f' ],
  ],
  'String.prototype.ltrim': [
    [ 'abcdef',              'abcdef' ],
    [ 'abcdef   ',        'abcdef   ' ],
    [ '   abcdef',           'abcdef' ],
    [ '   abcdef   ',     'abcdef   ' ],
    [ ' a b c d e f ', 'a b c d e f ' ],
  ],
  'String.prototype.rtrim': [
    [ 'abcdef',              'abcdef' ],
    [ 'abcdef   ',           'abcdef' ],
    [ '   abcdef',        '   abcdef' ],
    [ '   abcdef   ',     '   abcdef' ],
    [ ' a b c d e f ', ' a b c d e f' ],
  ],
  'String.prototype.capitalize': [
    [ 'abc', 'Abc' ],
    [ 'Abc', 'Abc' ],
    [ 'aBC', 'Abc' ],
    [ 'ABC', 'Abc' ],
    [ 'a',     'A' ],
    [ ' bc', ' Bc' ],
    [ ' ',     ' ' ],
    [ '',       '' ],
    [ '+',     '+' ],
  ],
  'String.prototype.contains': [
    [ 'abc', 'a',     true  ],
    [ 'abc', 'b',     true  ],
    [ 'abc', 'c',     true  ],
    [ 'abc', 'ab',    true  ],
    [ 'abc', 'bc',    true  ],
    [ 'abc', 'abc',   true  ],
    [ 'abc', 'ac',    false ],
    [ 'abc', ' ',     false ],
    [ 'abc', 'abcde', false ],
    [ 'abc', '+',     false ],
    [ 'abc', '',      true  ],
  ],
  'String.prototype.startsWith': [
    [ 'abc', 'a',   true  ],
    [ 'abc', 'b',   false ],
    [ 'abc', 'c',   false ],
    [ 'abc', ' ',   false ],
    [ 'abc', '+',   false ],
    [ 'abc', '' ,   true  ],
    [ 'abc', 'abc', true  ],
  ],
  'String.prototype.endsWith': [
    [ 'abc', 'a',   false ],
    [ 'abc', 'b',   false ],
    [ 'abc', 'c',   true  ],
    [ 'abc', ' ',   false ],
    [ 'abc', '+',   false ],
    [ 'abc', '' ,   true  ],
    [ 'abc', 'abc', true  ],
  ],
  'String.prototype.lpad': [
    [ 'abc', ' ', 10, '       abc' ],
    [ 'abc', '+',  4,       '+abc' ],
    [ 'abc', '+',  1,        'abc' ],
    [ 'abc', '+',  0,        'abc' ],
    [ 'abc', '+', -1,        'abc' ],
  ],
  'String.prototype.rpad': [
    [ 'abc', ' ', 10, 'abc       ' ],
    [ 'abc', '+',  4,       'abc+' ],
    [ 'abc', '+',  1,        'abc' ],
    [ 'abc', '+',  0,        'abc' ],
    [ 'abc', '+', -1,        'abc' ],
  ],
  'String.prototype.between': [
    [ 'abcdefghijk', 'cd', 'h',            'efg' ],
    [ 'field="value"', '"', '"',         'value' ],
    [ 'field:"value"', '"', '"',         'value' ],
    [ 'field[value]', '[', ']',          'value' ],
    [ 'kjihgfedcba', 'cd', 'h',               '' ],
    [ 'kjihgfedcba', 'dc', 'h',               '' ],
    [ 'field="value"', '=', '=',              '' ],
    [ 'field[value]', '{', '}',               '' ],
    [ '{a:"b",c:"d"}', '"', '"',             'b' ],
  ],
  "Date.prototype.toISOString": [
    [ new Date('2012-01-01T12:30:15.120Z'), '2012-01-01T12:30:15.120Z' ],
    [ new Date('1990-01-01T12:30:15.120Z'), '1990-01-01T12:30:15.120Z' ],
    [ new Date('2012-01-01T12:30:15.120'),  '2012-01-01T12:30:15.120Z' ],
    [ new Date('2012-01-01T12:30:15'),      '2012-01-01T12:30:15.000Z' ],
    [ new Date('2012-01-01T12:30'),         '2012-01-01T12:30:00.000Z' ],
    [ new Date('2012-01-01'),               '2012-01-01T00:00:00.000Z' ],
  ],
  "Date.prototype.toSimpleString": [
    [ new Date('2012-01-01T12:30:15.120Z'), '2012-01-01 12:30' ],
    [ new Date('2012-01-01T12:30:15.120'),  '2012-01-01 12:30' ],
    [ new Date('2012-01-01T12:30:15'),      '2012-01-01 12:30' ],
    [ new Date('2012-01-01T12:30'),         '2012-01-01 12:30' ],
    [ new Date('2012-01-01'),               '2012-01-01 00:00' ],
  ],
  'isScalar': [
    [ 'value1', true  ],
    [ 50,       true  ],
    [ true,     true  ],
    [ null,     false ],
    [ [],       false ],
    [ {},       false ],
    [ '',       true  ],
  ],
  'random': [
    [  0, 10, function(result) { return (result >=  0 && result <= 10); } ],
    [  1, 10, function(result) { return (result >=  1 && result <= 10); } ],
    [ -1, 10, function(result) { return (result >= -1 && result <= 10); } ],
    [ 10, 0,  function(result) { return (result >=  0 && result <= 10); } ],
    [ 10, 10, 10 ],
  ],
  'shuffle': [
    [ [1,2,3],   function(result) { return JSON.stringify(result.sort()) === '[1,2,3]'; }   ],
    [ ['a','b'], function(result) { return JSON.stringify(result.sort()) === '["a","b"]'; } ],
    [ [1,'a',3], function(result) { return JSON.stringify(result.sort()) === '[1,3,"a"]'; } ],
    [ [],        function(result) { return JSON.stringify(result.sort()) === '[]'; }        ],
  ],
});
